#Tool docking init
[gcode_macro DOCK_INIT]
variable_tool_present: False
variable_tool_zone_x:0
variable_tool_zone_y:0
variable_tool_park_x:0
variable_tool_park_y:0
variable_tool_home_x:None
variable_tool_home_y:None
gcode:

# Tool Home is used to set a return location after performing a tool pickup.
# Otherwise the default behaviour is to return to the location the prior tool was in.
[gcode_macro TOOL_HOME]
gcode:
	{% set HOME = params.HOME|default(None) %}
	{% if HOME %}
		{% set home=HOME.split(',') %}
		SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_home_x VALUE={ home[0]|float }
		SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_home_y VALUE={ home[1]|float }
	{% endif %}

#TOOL_PICKUP will move to the defined ZONE, 
[gcode_macro TOOL_PICKUP]
variable_purge_length:12
variable_purge_retract:0.8
variable_purge_deretract:0.4
variable_purge_exit_distance:35
variable_purge_wipe_distance:35
gcode:
	{% set ZONE_X = params.ZONE_X|default(0)|float %}
	{% set ZONE_Y = params.ZONE_Y|default(0)|float %}
	{% set PARK_X = params.PARK_X|default(0)|float %}
	{% set PARK_Y = params.PARK_Y|default(0)|float %}
	{% set OFFSET_X = params.OFFSET_X|default(0)|float %}
	{% set OFFSET_Y = params.OFFSET_Y|default(0)|float %}
	{% set OFFSET_Z = params.OFFSET_Z|default(0)|float %}
	{% set PURGE = params.PURGE|default(false, true) %}
	{% set PURGE_Y = params.PURGE_Y|default(0)|float %}
	{% set EXTRUDER_NAME = params.EXTRUDER_NAME %}
	{% set START_ACCEL = printer.toolhead.max_accel %}

	{% if printer["gcode_macro DOCK_INIT"].tool_present and printer.toolhead.extruder == EXTRUDER_NAME %}
		{ action_respond_info("Tool %s already picked up" % EXTRUDER_NAME) }
	{% else %}
		SAVE_GCODE_STATE NAME=tool_pickup_state
		{% set home = printer['gcode_move'].gcode_position %}
		{% set home_x = printer["gcode_macro DOCK_INIT"].tool_home_x %}
		{% set home_y = printer["gcode_macro DOCK_INIT"].tool_home_y %}
		{% if home_x is none or home_y is none %}
			{% set home_x = home.x %}
			{% set home_y = home.y %}
		{% endif %}

		#Drop the Z 1mm relative
		G91;
		G1 Z1 F1200;
		#Set us back to absolute mode. 
		G90;
		{% if printer["gcode_macro DOCK_INIT"].tool_present %}
			#If we have a tool, drop it off
			TOOL_DROPOFF
		{% else %}
			#If we don't have a tool but the lock is engaged, unlock it.
			TOOL_UNLOCK
		{% endif %}

		# Crank up the acceleration between toolchanges
		M204 S14000
		#Move to tool zone.
		G1 X{ZONE_X} Y{ZONE_Y} F48000;

		#Move to the tool tool on posts.
		G1 X{PARK_X} Y{PARK_Y} F2700;
		#Lock Tool in place
		TOOL_LOCK
		ACTIVATE_EXTRUDER extruder={EXTRUDER_NAME}
		
		# Apply Z offset now so that any oozing resulting from the slow Z move is caught by pebbles later
		SET_GCODE_OFFSET Z={OFFSET_Z} MOVE=1

		#Move to tool zone.
		G1 X{ZONE_X} Y{ZONE_Y} F2700;

		#SET_TMC_CURRENT stepper=tool_lock CURRENT=0.7
		#MANUAL_STEPPER STEPPER=tool_lock SET_POSITION=0
		#MANUAL_STEPPER STEPPER=tool_lock MOVE=-3 SPEED=10
		#SET_TMC_CURRENT STEPPER=tool_lock CURRENT=0.3

		# Drop acceleration now a tool's attached
		M204 S6000

		#Form some pebbles if requested and min extruder temp is reached
		{% if params.PURGE and printer[EXTRUDER_NAME].temperature >= printer.configfile.settings[EXTRUDER_NAME].min_extrude_temp %}
			# Move back to tool park area
			G1 X{PARK_X} Y{PARK_Y} F12000

			# Lower acceleration for pebble moves
			M204 S2000
			{% set pre_fan_speed = printer.fan.speed %}
			M83 ; Relative extrusion
			G91 ; Relative moves
			M106 S255 ; Max fan to cool the pebble
			
			; Rapid move backwards to try to break off the tail
			G1 E2 F250
			G1 Y-{purge_exit_distance|float} F6000
			G1 Y{purge_exit_distance|float} F3000

			G1 Y{PURGE_Y} ; Move back 25mm to the purge zone
			G1 E{purge_length|float} F250 ; Extrude 20mm to create the pebble
			;G4 P1000 ; Wait 1 second
			G4 P500
			G1 E-{purge_retract|float} F900 ; 0.8mm retraction to prevent oozing
			;G4 P6000 ; Set the pebble for 6s
			G4 P2000
			G1 E{purge_deretract|float} F120 ; Unretract and push another 1mm
			G1 Y-{purge_exit_distance|float} F2700 ; Rapid move back & forward across the silicone wiper
			G90 ; Return to absolute positioning to move to the safe zone
			G1 X{ZONE_X} Y{ZONE_Y} F30000
			M106 S{255 * pre_fan_speed} ; Return the fan to it's previous state
			
			G92 E0 ; Reset extrusion distance

			# Lift accel back up for moving back to the home position
			M204 S6000

			
			# Return to tool zone
			G1 X{ZONE_X} Y{ZONE_Y} F48000;
		{% elif params.PURGE %}
			{ action_respond_info("Can't form pebbles as current temperature of %s is below min extrude temp of %s" % (printer[EXTRUDER_NAME].temperature, printer.configfile.settings[EXTRUDER_NAME].min_extrude_temp)) }
		{% endif %}

		#Save the state so we can drop the tool later.
		SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_zone_x VALUE={ZONE_X}
		SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_zone_y VALUE={ZONE_Y}
		SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_park_x VALUE={PARK_X}
		SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_park_y VALUE={PARK_Y}
		#Mark that we have a tool.
		SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_present VALUE=True;
		#Set tool Offsets
		SET_GCODE_OFFSET X={OFFSET_X} Y={OFFSET_Y}
		#BED_MESH_OFFSET X={OFFSET_X} Y={OFFSET_Y}

		# Refresh input shaper values
		REFRESH_INPUT_SHAPER

		#Return back to our origin. 
		G1 X{home_x} Y{home_y} z{home.z} F48000;

		# Restore acceleration back to the base
		M204 S{START_ACCEL}
		RESTORE_GCODE_STATE NAME=tool_pickup_state
		SET_GCODE_OFFSET X={OFFSET_X} Y={OFFSET_Y} Z={OFFSET_Z}
	{% endif %}

[gcode_macro TOOL_DROPOFF]
gcode:
	SAVE_GCODE_STATE NAME=tool_dropoff_state
	{% if printer["gcode_macro DOCK_INIT"].tool_present %}
		{% set active_extruder = printer.toolhead.extruder %}
		SET_GCODE_OFFSET X=0 Y=0 Z=0
		#BED_MESH_OFFSET X=0 Y=0
		#Make sure we are in absolute mode.
		G90
		#Move to tool zone.
		G1 X{printer["gcode_macro DOCK_INIT"].tool_zone_x} Y{printer["gcode_macro DOCK_INIT"].tool_zone_y} F30000;
		#Park tool on posts.
		G1 X{printer["gcode_macro DOCK_INIT"].tool_park_x} Y{printer["gcode_macro DOCK_INIT"].tool_park_y} F2700;
		#Unlock
		TOOL_UNLOCK

		#Move to tool zone.
		G1 X{printer["gcode_macro DOCK_INIT"].tool_zone_x} Y{printer["gcode_macro DOCK_INIT"].tool_zone_y} F2700;
		#Set variable to indicate that tool is not present.
		SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_present VALUE=False;
	{% endif %}
	RESTORE_GCODE_STATE NAME=tool_dropoff_state
	SET_GCODE_OFFSET X=0 Y=0 Z=0
